테스트란?
- 우리가 개발한 제품 및 서비스의 함수, 기능, UI, 성능, API등이 우리가 원하는대로 동작하는지 확인하는 행위이다.

테스트를 하는 이유?
- 테스트를 통해 내가 만든 제품 및 서비스가 원하는대로 동작할 것이라는 확인을 가질 수 있음.
- 기능의 정상 동작 확인, 요구사항 만족, 이슈에 대한 예측, 버그를 사전에 발견, 자신감 있는 리팩토링 가능, 손쉬운 유지보수, 코드의 품질 향상, 코드간의 의존성 낮춤, 좋은 문서화 등의 장점이 있음.

테스트 피라미드
- 1. E2E Test(UI 테스트, 사용자 테스트) - 서비스를 실사용할 때 기준의 테스트 ex) 자전거를 탐
- 2. Integration Test(통합 테스트) - 모듈들, 클래스들에 대한 테스트 ex) 자전거 바퀴들을 테스트함
- 3. Unit Test(단위 테스트) - 함수, 모듈, 클래스등에 대한 테스트 ex) 자전거의 바퀴
- 3 > 2 > 1 테스트의 순으로 테스트 코드의 작성이 어려우며 비용 또한 많이 들어간다.
- 개발을 진행하며 단위 테스트를 같이 작성한다면 버그 및 오류를 빨리 찾을 수 있으므로 비용이 가장 저렴하다.

TDD란?
- 테스트 주도 개발
- 서비스 코드를 작성하기 전 테스트 코드를 먼저 작성하는 개발 방법론
- 실패하는 테스트 코드를 작성 -> 이를 성공하기 위한 서비스 코드를 작성 -> 테스트 코드가 성공한다면 서비스 코드 리팩토링 이 과정을 반복한다.
- TDD의 장점은 좋은 테스트 코드를 작성하기 위해서는 요구사항을 정확히 이해하고 분석해야 하며, 요구사항 파악을 통해 시스템의 전반적인 설계를 향상 시킨다는 장점이 있다.
